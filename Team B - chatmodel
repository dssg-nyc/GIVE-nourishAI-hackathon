{
  "nodes": [
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "812387601966860",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1.1,
      "position": [
        1280,
        192
      ],
      "id": "e3e5a2f9-8372-4b09-bcf9-052a2c5a026b",
      "name": "Send message",
      "webhookId": "d9a54556-c049-4c89-aade-57e5cd2f9664",
      "credentials": {
        "whatsAppApi": {
          "id": "pU16w0Wt4OEAtpi6",
          "name": "WhatsApp API - B"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Instructions: \n- One captain each team who is responsible for the final code\n- do not over-write each other's work\n- can break out into segments to work on different parts of the pipeline",
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "7bf07f99-c788-4d8a-9c85-ac318c2f503b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1bY19czv9xo45nLZ4Bo-rmg_vfg-kaOQhwClvm2DlEBM/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "dataset",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        32,
        -432
      ],
      "id": "4dda140f-4309-424f-8dd1-dd793f3e5802",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vu1v00DdFYomocol",
          "name": "dataset"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const households = {};\n\nfor (const row of items) {\n    const familyId = String(row.json['family_id'] || 'unknown');\n    if (!households[familyId]) {\n        households[familyId] = {\n            family_id: familyId,\n            members: []\n        };\n    }\n\n    households[familyId].members.push({\n        person_id: String(row.json['person_id'] || ''),\n        age: row.json['age'] || null,\n        gender: String(row.json['gender'] || ''),\n        bmiCategory: String(row.json['BMI_category'] || ''),\n        diagnosis: String(row.json['diagnosis_or_flag'] || ''),\n        fruitServings: row.json['fruit_servings_per_day'] || 0,\n        vegServings: row.json['veg_servings_per_day'] || 0,\n        foodInsecurityScore: row.json['food_insecurity_score'] || 0\n    });\n}\n\nreturn Object.values(households).map(hh => ({ json: hh }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        304,
        -416
      ],
      "id": "6ec0ba4c-0e2f-4f31-a863-846aa853dc8d",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "jsCode": "const mealPlan = $json.weekly_meal_plan;\nlet allMeals = \"\";\n\nfor (const day in mealPlan) {\n    allMeals += `${day}: ${mealPlan[day]}\\n`;\n}\n\nitems[0].json.meals_text = allMeals;\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1152,
        -448
      ],
      "id": "f52deb95-4653-42f4-870f-8f35def2a8d9",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate an optimized weekly meal plan for this household:\n\n{{ $json }}\n\nRequirements:\n- Culturally relevant meals\n- Medically tailored (consider BMI, age, diagnosis, and fruit/veg intake)\n- 3 meals/day for 7 days\n- Return as JSON with days as keys and meals as values\n",
        "options": {
          "systemMessage": "You are a helpful assistant",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        848,
        208
      ],
      "id": "acb57531-54b9-4c8f-ac57-2347e7c01ea0",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {
          "messageStatusUpdates": []
        }
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        512,
        352
      ],
      "id": "8a1d5b8d-55d5-4056-a1e1-dcf4acea89bf",
      "name": "WhatsApp Trigger",
      "webhookId": "d82bec29-e02e-4cc3-9da7-1f3d140727c1",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "ETj2iIkl4KvyrWF5",
          "name": "Official OAuth Account - A"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude 4 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        768,
        432
      ],
      "id": "fc9dd764-8dc0-4835-be85-53b5e26c5950",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "OFgQhHextGsCwQCq",
          "name": "Anthropic account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        896,
        448
      ],
      "id": "98e422fb-87a5-4dbb-a4de-fa56e343e483",
      "name": "Simple Memory",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        160,
        -672
      ],
      "id": "5d7f31c6-57bf-4efe-8471-aac06dffa7df",
      "name": "When chat message received",
      "webhookId": "3be104e5-9421-43a5-89e5-98a51fdfb53a"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "url",
          "value": "https://docs.google.com/spreadsheets/d/1bY19czv9xo45nLZ4Bo-rmg_vfg-kaOQhwClvm2DlEBM/edit?usp=drivesdk",
          "__regex": "https:\\/\\/(?:drive|docs)\\.google\\.com(?:\\/.*|)\\/d\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)"
        },
        "sheetName": {
          "__rl": true,
          "value": "dataset",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        1024,
        464
      ],
      "id": "276349f1-9ab0-42ba-acfe-53d75a75c182",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vu1v00DdFYomocol",
          "name": "dataset"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const households = {};\n\nfor (const row of items) {\n    const familyId = String(row.json['family_id'] || 'unknown');\n    if (!households[familyId]) {\n        households[familyId] = {\n            family_id: familyId,\n            members: []\n        };\n    }\n\n    households[familyId].members.push({\n        person_id: String(row.json['person_id'] || ''),\n        age: row.json['age'] || null,\n        gender: String(row.json['gender'] || ''),\n        bmiCategory: String(row.json['BMI_category'] || ''),\n        diagnosis: String(row.json['diagnosis_or_flag'] || ''),\n        fruitServings: row.json['fruit_servings_per_day'] || 0,\n        vegServings: row.json['veg_servings_per_day'] || 0,\n        foodInsecurityScore: row.json['food_insecurity_score'] || 0\n    });\n}\n\n// Convert to array for the AI node\nreturn Object.values(households).map(hh => ({ json: hh }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        656,
        32
      ],
      "id": "b01c1e91-308c-47ec-a48f-965027a2affb",
      "name": "Code in JavaScript2",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a nutrition assistant. Generate an optimized weekly meal plan for this household:\n\n{{ $json }}\n\nRequirements:\n- Culturally relevant meals\n- Medically tailored based on BMI, age, diagnosis, fruit/veg intake\n- 3 meals per day for 7 days\n- Return as JSON with days as keys and meals as values\n",
        "options": {
          "systemMessage": "You are a helpful assistant",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        576,
        -416
      ],
      "id": "974e015a-ace7-46ef-a6e6-2b3d7d5ac5c7",
      "name": "AI Agent1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate a grocery list from this weekly meal plan:\n\n{{ $json.meals_text }}\n\nGroup items by category (fruits, vegetables, proteins, grains, dairy, etc.) and include quantities if possible. Return as JSON.\n",
        "options": {
          "systemMessage": "You are a helpful assistant",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1376,
        -416
      ],
      "id": "29b326e5-ec23-4f54-9cfa-8d16d4131527",
      "name": "AI Agent2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const data = {\n    family_id: $json.family_id,\n    grocery_list: JSON.parse($json.choices[0].message.content) // AI output\n};\n\nitems[0].binary = {\n    data: Buffer.from(JSON.stringify(data, null, 2))\n};\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        -256
      ],
      "id": "477c42fc-5115-4bff-87d0-20cbbd836bce",
      "name": "Code in JavaScript3"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1392,
        -160
      ],
      "id": "cae25510-2c22-4d4a-8e7c-4481f3ac1eac",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        656,
        -208
      ],
      "id": "780c7748-8fb9-4844-a9f7-fd7c6aa09c02",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "url",
          "value": "https://docs.google.com/spreadsheets/d/1bY19czv9xo45nLZ4Bo-rmg_vfg-kaOQhwClvm2DlEBM/edit?usp=drivesdk",
          "__regex": "https:\\/\\/(?:drive|docs)\\.google\\.com(?:\\/.*|)\\/d\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)"
        },
        "sheetName": {
          "__rl": true,
          "value": "dataset",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        1520,
        -192
      ],
      "id": "173af65d-75fc-4ef7-a784-c7dbf8234c37",
      "name": "Get row(s) in sheet in Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vu1v00DdFYomocol",
          "name": "dataset"
        }
      }
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1664,
        -400
      ],
      "id": "f1f10a76-c282-49a4-a6c4-b89b5597bd18",
      "name": "Convert to File",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "url",
          "value": "https://docs.google.com/spreadsheets/d/1bY19czv9xo45nLZ4Bo-rmg_vfg-kaOQhwClvm2DlEBM/edit?usp=drivesdk",
          "__regex": "https:\\/\\/(?:drive|docs)\\.google\\.com(?:\\/.*|)\\/d\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)"
        },
        "sheetName": {
          "__rl": true,
          "value": "dataset",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        864,
        -128
      ],
      "id": "d6861adb-0925-41d2-beb3-ef4311b0de91",
      "name": "Get row(s) in sheet in Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vu1v00DdFYomocol",
          "name": "dataset"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        880,
        -368
      ],
      "id": "1f824466-ea68-4a67-8df9-63905e9bfb29",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        464,
        -208
      ],
      "id": "255a2b84-66f4-4e19-8034-94968bb70bfa",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "0ef0mLkI9piBGSfM",
          "name": "DeepSeek account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        1232,
        -176
      ],
      "id": "edadd350-9762-46c4-b59f-ef9eb39d82e3",
      "name": "DeepSeek Chat Model1",
      "credentials": {
        "deepSeekApi": {
          "id": "0ef0mLkI9piBGSfM",
          "name": "DeepSeek account 2"
        }
      }
    }
  ],
  "connections": {
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        []
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet in Google Sheets1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5ab5075b3f6c5d1b1f89c5fcfeb0371c8dc0b8163cfeba31aff0663915e862fd"
  }
}
